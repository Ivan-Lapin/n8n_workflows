{
  "name": "Update_From_OptiOffice",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "authentication": "serviceAccount",
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1OVlBirRGUhcsq0Ia-3FQ_dQNTPipEF2N",
          "mode": "list",
          "cachedResultName": "Отчёты по операторам",
          "cachedResultUrl": ""
        },
        "event": "fileCreated",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        80,
        640
      ],
      "id": "2acf0592-142c-48a0-8c2a-f8a918029d0e",
      "name": "Google Drive Trigger",
      "credentials": {
        "googleApi": {
          "id": "",
          "name": ""
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.webViewLink }}",
          "mode": "url"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        336,
        400
      ],
      "id": "6f7a5510-6ef4-4171-bd63-180596db6cd9",
      "name": "Download file",
      "credentials": {
        "googleApi": {
          "id": "",
          "name": ""
        }
      }
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import re\n\noutput = []\n\nfor item in _input.all():\n    data_str = item.json.get('data', '').strip()\n    result = {}\n\n    for line in data_str.split('\\n'):\n        line = line.strip()\n        if not line:\n            continue\n\n        match = re.match(r'([^:]+):\\s*(.+)', line)\n        if not match:\n            continue\n\n        key = match.group(1).strip()\n        value = match.group(2).strip()\n\n        if key.lower() == \"оператор\":\n            parts = value.split()\n            if len(parts) >= 2:\n                value = f\"{parts[-1]} {parts[0][0]}\"\n\n        if key.lower() == \"стволы\":\n            value = re.sub(r'\\s*шт\\.?', '', value)\n\n        if value.endswith(','):\n            value = value[:-1].strip()\n\n        if ':' in value:\n            result[key] = value\n        else:\n            try:\n                result[key] = int(value)\n            except ValueError:\n                result[key] = value\n\n    output.append(result)\n\nreturn output\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1088,
        800
      ],
      "id": "6121a066-624f-47bf-a0b5-9f2f7db43786",
      "name": "Convert text to JSON"
    },
    {
      "parameters": {
        "resource": "worksheet",
        "operation": "update",
        "workbook": {
          "__rl": true,
          "value": "AE5B8E26FA417338!s66c8b191695e44cdabb21273b19070c0",
          "mode": "list",
          "cachedResultName": "Эффективность заготовки",
          "cachedResultUrl": ""
        },
        "worksheet": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "columnToMatchOn": "ФИО оператора",
        "valueToMatchOn": "={{ $json['Оператор'] }}",
        "fieldsUi": {
          "values": [
            {
              "column": "ср обьем\nхлыста",
              "fieldValue": "={{ $json['Средняя крепость'] }}"
            },
            {
              "column": "Кол-во\n стволов, шт",
              "fieldValue": "={{ $json['Стволы'] }}"
            },
            {
              "column": "G, мч",
              "fieldValue": "={{ $json['Рабочее время'] }}"
            },
            {
              "column": "G15, мч",
              "fieldValue": "={{ $json['Эффективное время G15'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.microsoftExcel",
      "typeVersion": 2.1,
      "position": [
        1936,
        1088
      ],
      "id": "3b90bcb9-9717-4ee8-adcc-de1a650f86c9",
      "name": "Update sheet form OptiOffice",
      "alwaysOutputData": true,
      "credentials": {
        "microsoftExcelOAuth2Api": {
          "id": "7frKAWNqv8MRLd4w",
          "name": "lapin@scanica.ru"
        }
      }
    },
    {
      "parameters": {
        "operation": "Convert from PDF",
        "url": "={{ $json.webViewLink }}",
        "convertType": "toJpg",
        "advancedOptions_Image": {}
      },
      "type": "n8n-nodes-pdfco.PDFco Api",
      "typeVersion": 1,
      "position": [
        592,
        400
      ],
      "id": "2cb9d470-59a1-430c-9029-3cd114a298e6",
      "name": "Covert from PDF to JPG. PDFco Api",
      "credentials": {
        "pdfcoApi": {
          "id": "",
          "name": ""
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "body[0]",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        864,
        400
      ],
      "id": "d02fc97b-e40c-48aa-912a-19f87c978373",
      "name": "Extraction url. Split Out"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c366f2c2-8597-4796-8e62-934963f5154a",
              "name": "Url",
              "value": "={{ $json['body[0]'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1168,
        400
      ],
      "id": "235d3c8d-5581-438b-ae65-df4c8684f5a1",
      "name": "Rename. Edit Fields"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "text": "You are a professional parser for production reports. You receive a JPG image that contains production metrics listed as lines with labels followed immediately by their values on the next line.\n\nYour task is to locate and extract the exact values for the following metrics (in Russian):\n\nЭффективное время G15\n\nРабочее время\n\nСредняя крепость\n\nСтволы\n\nEach metric’s value is located immediately on the line after its label.\n\nAdditionally, determine the report period month and year from the date range shown in the file (e.g. \"2025-08-01 - 2025-08-30\"). Convert this to a string format with the Russian month name and year (e.g. \"Август 2025\").\n\nAlso extract the operator's full name from the report heading or subtitle in the format:\nОператор: Имя Фамилия\n\nReturn the extracted data strictly in this text format:\n\nОператор: <operator full name>\nЭффективное время G15: <value>,\nРабочее время: <value>,\nСредняя крепость: <value>,\nСтволы: <value>,\nДата: <месяц> <год>\n\nOnly return the data, no explanations or additional output.",
        "imageUrls": "={{ $json.Url }}",
        "simplify": false,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        320,
        800
      ],
      "id": "aef007c6-4327-41bf-bbae-8fc4a6906006",
      "name": "Analytics. Get metrics from image JPG",
      "credentials": {
        "openAiApi": {
          "id": "",
          "name": ""
        }
      }
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "choices[0].message.content",
        "binaryPropertyName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        560,
        800
      ],
      "id": "8cd10185-2bea-4a15-af8d-3a42bec1c091",
      "name": "Convert data to File"
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        816,
        800
      ],
      "id": "72ebe47e-5313-4a5a-bc3f-0097f8f3a2c4",
      "name": "Extract from File to Text"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst sheets = items.map(item => ({\n  id: item.json.id,\n  name: item.json.name,\n}));\n\nreturn { sheets };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        928,
        1216
      ],
      "id": "3a57d626-817d-492d-b92e-3618cc769b45",
      "name": "Code sheets[name]"
    },
    {
      "parameters": {
        "resource": "worksheet",
        "workbook": {
          "__rl": true,
          "value": "AE5B8E26FA417338!s66c8b191695e44cdabb21273b19070c0",
          "mode": "list",
          "cachedResultName": "Эффективность заготовки",
          "cachedResultUrl": ""
        },
        "returnAll": true,
        "filters": {}
      },
      "type": "n8n-nodes-base.microsoftExcel",
      "typeVersion": 2.1,
      "position": [
        320,
        1216
      ],
      "id": "d654821c-a3b4-4a36-9a63-a316230e7c2c",
      "name": "Get sheets from updated table",
      "credentials": {
        "microsoftExcelOAuth2Api": {
          "id": "",
          "name": ""
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1424,
        1088
      ],
      "id": "242b636c-a598-4379-a5dd-9aed3f6c6565",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "const inputData = $input.all();\n\n// Первый элемент — это sheets, остальные — операторы\nconst sheets = inputData[0].json.sheets;\nconst operators = inputData.slice(1);\n\nfunction normalize(str) {\n  return str.replace(/[\\s\\-\"]/g, '').toLowerCase();\n}\n\nconst results = [];\n\nfor (const operator of operators) {\n  // Обрабатываем вложенность .json (или нет):\n  const opData = operator.json || operator;\n  const normalizedTarget = normalize(opData['Дата']);\n\n  let foundSheet = null;\n  let foundId = null;\n\n  // Ищем лист в sheets по названию\n  for (const sheet of sheets) {\n    if (normalize(sheet.name) === normalizedTarget) {\n      foundSheet = sheet.name;\n      foundId = sheet.id;\n      break;\n    }\n  }\n\n  // Добавляем новый объект в результаты (все исходные поля + найденный лист и id)\n  results.push({\n    sheet_found: foundSheet,\n    id: foundId,\n    ...opData\n  });\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1648,
        1088
      ],
      "id": "503e4819-03a7-4609-b0aa-87df231ac8a2",
      "name": "Code"
    },
    {
      "parameters": {
        "content": "## Step 1 - Get PDF file, Convert to JPG and Output URL \n",
        "height": 368,
        "width": 1088
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        272,
        192
      ],
      "id": "3028d1ad-b723-4498-b90c-208b3fe6ab1b",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Step 2 - Image Analysis and Output data in JSON",
        "height": 400,
        "width": 1088
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        272,
        576
      ],
      "id": "aa42407d-aa6c-41e7-98f4-52cef2d0bdaa",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Step 3 - Get All Sheets from Workbook and Output them in JSON ",
        "height": 400,
        "width": 912
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        272,
        1008
      ],
      "id": "092bfbb2-38c7-4838-87fb-070035b1ccd7",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Step 4 (Final) - Update the File",
        "height": 400,
        "width": 1184,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1328,
        1008
      ],
      "id": "e9ee6a37-1c8d-4d29-aa4d-930474bc721e",
      "name": "Sticky Note3"
    }
  ],
  "pinData": {},
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get sheets from updated table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Covert from PDF to JPG. PDFco Api",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert text to JSON": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Update sheet form OptiOffice": {
      "main": [
        []
      ]
    },
    "Covert from PDF to JPG. PDFco Api": {
      "main": [
        [
          {
            "node": "Extraction url. Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extraction url. Split Out": {
      "main": [
        [
          {
            "node": "Rename. Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rename. Edit Fields": {
      "main": [
        [
          {
            "node": "Analytics. Get metrics from image JPG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analytics. Get metrics from image JPG": {
      "main": [
        [
          {
            "node": "Convert data to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert data to File": {
      "main": [
        [
          {
            "node": "Extract from File to Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File to Text": {
      "main": [
        [
          {
            "node": "Convert text to JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code sheets[name]": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get sheets from updated table": {
      "main": [
        [
          {
            "node": "Code sheets[name]",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Update sheet form OptiOffice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "zvkg8t0QSxIawPeV"
  },
  "versionId": "b6c0fd95-ad2c-4520-a4fa-784bdb35298f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5db09d27a6f1774765def08cd71f12cc3a0a65d0a308fdeb16024b3d6025b9bd"
  },
  "id": "83U4TQOLe8IVIPI8",
  "tags": []
}